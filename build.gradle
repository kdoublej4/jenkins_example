plugins {
    id 'java'
    id("io.qameta.allure") version "2.12.0"
}

group = 'guru.qa'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion =  "2.29.0",
    slf4jVersion = "2.0.15"


allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "io.qameta.allure:allure-selenide:$allureVersion",      // 'io.qameta.allure:allure-selenide:2.29.0'
            "org.slf4j:slf4j-simple:$slf4jVersion",                 // 'org.slf4j:slf4j-simple:2.0.15'

            'org.aspectj:aspectjweaver:1.9.22.1',
            'com.codeborne:selenide:7.4.2',
            'org.junit.jupiter:junit-jupiter:5.10.3',
            'com.github.javafaker:javafaker:1.0.2'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    def browser = System.getProperty("browser", "chrome")
    println "Using browser: $browser"
    systemProperty "browser", browser


    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register('one_property_test', Test) {
    useJUnitPlatform {
        includeTags("one_property")
    }
}

tasks.register('positive_test', Test) {
    useJUnitPlatform {includeTags("positive")
    }
}

tasks.register('negative_test', Test) {
    useJUnitPlatform {
        includeTags("negative")
    }
}

tasks.register('skipped_test', Test) {
    useJUnitPlatform {
        includeTags("skipped")
    }
}





